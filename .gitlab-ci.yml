stages:
  - lint
  - test
  - build

variables:
  POSTGRES_DB: timetrackingdb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: time
  DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
  VITE_API_URL: http://backend:8000

# Linting Stage
lint:
  stage: lint
  image: python:3.11
  before_script:
    - pip install flake8
    - cd time-tracking-backend
  script:
    - flake8 .
  allow_failure: true

lint-frontend:
  stage: lint
  image: node:20
  before_script:
    - cd time-tracking-frontend
    - npm install
  script:
    - npx eslint .

# Testing Stage
# test-backend:
#   stage: test
#   image: python:3.11
#   services:
#     - name: postgres:15
#       alias: postgres
#   variables:
#     DATABASE_HOST: postgres
#   before_script:
#     - pip install -r time-tracking-backend/requirements.txt
#     - cd time-tracking-backend
#     - python manage.py makemigrations
#     - python manage.py migrate
#   script:
#     - python manage.py test

test-backend:
  stage: test
  image: python:3.11
  services:
    - name: postgres:15
      alias: postgres
  variables:
    DATABASE_HOST: postgres
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    - pip install -r time-tracking-backend/requirements.txt
    - cd time-tracking-backend
    - |
      until PGPASSWORD=$POSTGRES_PASSWORD psql -h "$DATABASE_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c '\q'; do
        echo "Waiting for PostgreSQL to be ready..."
        sleep 5
      done
    - echo "PostgreSQL is ready!"
    - find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
    - python manage.py makemigrations --noinput
    - python manage.py migrate --fake-initial
  script:
    - python manage.py test




test-frontend:
  stage: test
  image: node:20
  before_script:
    - cd time-tracking-frontend
    - npm install
  script:
    - npm test

# Build Stage
build-backend:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:24.0.7-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
  script:
    - docker build -t devops.telecomste.fr/projet-startup-poc/time-tracking-app/backend:latest ./time-tracking-backend

build-frontend:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:24.0.7-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
  script:
    - docker build -t devops.telecomste.fr/projet-startup-poc/time-tracking-app/frontend:latest ./time-tracking-frontend